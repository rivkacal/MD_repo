!<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
!* init() reads the atom positions from file.  If 1 is selected for    *
!* startt then the velocities are assigned, otherwise, they are read   *
!* by selecting 2, or generated by selecting 3                         *
!***********************************************************************

      subroutine init
      include 'MD.com'

	real  pinitmax, TK1, TK2, PK1, PK2, APTtemp, msT,
     Q SigmaT1, SigmaT2, epstemp
	integer storage, dummy,  ANr, IB11, IB12, Ib22, Ib21,
     Q IT1, JT1, KT1, IT2, JT2, KT2, IP1, JP1, KP1, LP1, IP2, JP2, KP2,
     Q LP2, nBA1, nTA1, nPA1, nBA2, nTA2, nPA2,  ind1, ind2, ANt, 
     Q  MDT1, MDT2, cl1, cl2

        character(LEN=20) FMTB, FMTT, FMTP, CA, RP


	real NNCeps
	dimension NNCeps(NNCmax)

        FMTB="(3I5,2F8.3)"
        FMTT="(4I5,2F8.3)"
        FMTP="(5I5,2F8.3)"
        CA="(3I5,F10.3,F9.6)"
        RP="(I8,2I5, 2F10.3)"

	pinitmax = (2.5*T)**(.5)
      if (startt .eq. 1) then
! this assignes the random momenta to the particles 
! using the desired T as a guide
        open(25, FILE=initval, ACCESS= 'sequential',
     Q  status='unknown')

        read(25, *) 
        read(25, *) 
        read(25, *) 
        read(25, *) ANr
        read(25, *)
 
      do 555 i=1, ANr

	read(25, FMTX) j, ResSeq(i),AtType(i), ResID(i),
     Q X(i), Y(i), Z(i), ms(i)

        if(j .ne. i)then
           write(*,*) 'indexing in input file is wrong'
           call abort
        end if
	call random
        VX(i) = pinitmax*(rand-.5)*2
	call random
	VY(i) = pinitmax*(rand-.5)*2
	call random
	VZ(i) = pinitmax*(rand-.5)*2
555   continue

         read(25,*) MDT
         if(MDT .gt. Clmax)then
            write(*,*) 'too many chains'
            call abort
         endif
         do i=1,MDT
            read(25,*) ChainLength(i)

         enddo


        close(25,status='keep')

	elseif(startt .eq. 2)then

        open(25, FILE=initval, ACCESS= 'sequential',
     Q  status='unknown')
! If 2 is chosen for startt, then data is extracted from another file
! that was created by this program so there is position on one line and momenta
! on the next with the correct number of digits
        read(25, *) 
        read(25, *) 
        read(25, *) 
	  read(25,*) ANr
        read(25, *) 
	do 999 i=1, ANr
	read(25, FMTX) j, ResSeq(i),AtType(i), ResID(i),
     Q X(i), Y(i), Z(i), ms(i)
        if(j .ne. i)then
           write(*,*) 'indexing in input file is wrong'
           call abort
        end if
999   continue

      do i=1, ANr
      read(25, list2) j,VX(i), VY(i), VZ(i)
        if(j .ne. i)then
           write(*,*) 'indexing in input file is wrong'
           call abort
        end if
      end do

         read(25,*) MDT

         if(MDT .gt. Clmax)then
            write(*,*) 'too many chains'
            call abort
         endif
         do i=1,MDT
            read(25,*) ChainLength(i)

         enddo



	close(25, status='KEEP')
        endif

! Read in the contact information

	
! These lines read in the conformations.
        open(30, file=conf, status='old', access='sequential')

          read(30,*) nBA
	if(NBA .gt. NBmax)then
	write(*,*) 'too many bonds'
	call abort
	endif

        do i=1, nBA
          read(30,FMTB) j, Ib1(i), Ib2(i),Rb(i), bK(i)
          bK(i) = 2*bK(i)
        end do
	
        call BONDSP

          read(30,*) nTA
        if(NtA .gt. Ntmax)then
        write(*,*) 'too many angles'
        call abort
        endif

        do i=1, nTA
          read(30,FMTT) j, IT(i), JT(i), KT(i), ANTC(i), Tk(i)
        TK(i)=TK(i)*2
        enddo

          read(30,*) nPA
        if(NpA .gt. Npmax)then
        write(*,*) 'too many dihedrals'
        call abort
        endif

! this reads in the dihedral angles and calculates the cosines and sines
! in order to make the force and energy calculations easier, later.
        do i=1, npA
           read(30,FMTP) j, IP(i), JP(i), KP(i), LP(i), APTtemp, PK(i)
         
            GAMS1(i)= PK(i)*Sin(APTtemp)
            GAMS3(i)= PK(i)*Sin(3.0*APTtemp)/2
            GAMC1(i)= PK(i)*Cos(APTtemp)
            GAMC3(i)= PK(i)*Cos(3.0*APTtemp)/2
	!write(*,*) 1,gamc1(1)

        END DO

        read(30,*) NC

          if(NC .gt. MaxCon)then
             write(*,*) 'too many contacts'
             call abort
          endif
        do i=1, NC

          read(30, CA) ind1, IC(i), JC(i), Sigma(i), EpsC(i)
        end do
! Find all of the possible Three-body interactions i.e. A-B contact, 
! B-C contact and C-A contact
        call ThreeBodyInit
! read non-native interactions
        read(30,*) NNC
        if(NNC .gt. NNCmax)then
        write(*,*) 'too many non contacts'
        call abort
        endif        
        do i=1, NNC
           read(30,RP) ind1, INC(i), JNC(i), NCsigma(i), NNCeps(i)
! this simplifies calculations later
           NNCsigma(i) = 12*NNCEps(i)*NCsigma(i)**6
        end do

        read(30,*) AN

! These are safeguard statements
        if(startt .eq. 1 .or. startt .eq. 2)then
        if (ANr .ne. AN)then
           write(*,*) 'Number of important atoms in files do not align.  
     Q Stop Program!!', AN, 'is the number in conf1'
           call abort
        endif
        endif


         read(30,*) MDT1
         if(MDT1 .gt. Clmax)then
            write(*,*) 'too many chains'
            call abort
         endif


	if(startt .eq. 1 .or. startt .eq. 2)then
	if(MDT1 .ne. MDT)then
            write(*,*) 'different numbers of chains, abort'
            call abort
         endif
	endif


         MDT = MDT1
        if(Trajectory .ne. 'NO')then
         write(6,*) MDT
	endif

         do i=1,MDT
            read(30,*) cl1 


        if(startt .eq. 1 .or. startt .eq. 2)then
	if(cl1 .ne. Chainlength(i))then
	write(*,*) 'chain lengths differ, abort'
	call abort
	endif
	endif

             ChainLength(i) = cl1

        if(Trajectory .ne. 'NO')then
             write(6,*) chainlength(i)
	endif
         enddo

        do i=1, AN

           read(30,"(I5,I4,A4,A3,4F8.3)") j, ResSeq(i),
     Q AtType(i), ResID(i), xt(i), yt(i), zt(i), ms(i)
        if(Trajectory .ne. 'NO')then
      write(6,'(I4,A4,A3)') ResSeq(i),AtType(i), ResID(i)
	endif
        enddo

! If startt is 3, then conformation 1 is used as the starting position
! and velocities are assigned.

      if(startt .eq. 3)then

      do 10 i=1, AN
      X(i)=xt(i)
      Y(i)=yt(i)
      Z(i)=zt(i)

        call random
        VX(i) = pinitmax*(rand-.5)*2
	call random
	VY(i) = pinitmax*(rand-.5)*2
	call random
	VZ(i) = pinitmax*(rand-.5)*2

 10   continue

      endif

        dummy = 0
        do i=1, MDT
           dummy = dummy + ChainLength(i)
        enddo

        if(dummy .ne. AN)then
           write(*,*) 'Chain lengths and number of particles dont align'
           call abort
        endif

	!write(*,*) 1,pk(1)

       end

!^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^end of init^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
